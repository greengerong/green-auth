"use strict";angular.module("green.auth",[]).factory("authInterceptor",["$q","authService",function(a,b){return{request:function(c){c.headers=c.headers||{};var d=b.getToken()||{};return angular.forEach(d,function(a,b){c.headers[b]||(c.headers[b]=a)}),c||a.when(c)}}}]).factory("responseInterceptor",["$q","$rootScope",function(a,b){return{responseError:function(c){return b.$broadcast("green-auth-event:response-error",c),a.reject(c)},response:function(c){return b.$broadcast("green-auth-event:response-success",c),c||a.when(c)}}}]).constant("tokenCacheFactory",{jsObject:function(){var a;return{save:function(b){return a=angular.copy(b)},get:function(){return a},remove:function(){a=null}}},localStorage:function(a){return{save:function(b){return window.localStorage.setItem(a,angular.toJson(b)),b},get:function(){var b=window.localStorage.getItem(a);return b?angular.fromJson(b):null},remove:function(){window.localStorage.removeItem(a)}}},sessionStorage:function(a){return{save:function(b){return window.sessionStorage.setItem(a,angular.toJson(b)),b},get:function(){var b=window.sessionStorage.getItem(a);return b?angular.fromJson(b):null},remove:function(){window.sessionStorage.removeItem(a)}}}}).provider("authService",function(){var a,b=this;b.setTokenCache=function(c){return a=c,b},b.$get=["tokenCacheFactory",function(b){return a=a||b.jsObject(),{setToken:function(b){return a.save(b)},getToken:function(){return a.get()},removeToken:function(){return a.remove()}}}]}).config(["$httpProvider",function(a){a.interceptors.push("authInterceptor","responseInterceptor")}]);